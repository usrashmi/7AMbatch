{
	"info": {
		"_postman_id": "805b951b-87a7-4d86-ae01-236c865588c1",
		"name": "USER AGENT TESTING-DDT",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "HTML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// java-scripts //chai library //english lang\r",
							"// order of execution in postman : API Request --> API Response --> Tests\r",
							"\r",
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"html\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Herman Melville - Moby-Dick\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/html; charset=utf-8\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{myUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://httpbin.org/html",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"html"
					]
				}
			},
			"response": []
		},
		{
			"name": "XML-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"xml\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Sample Slide Show\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Wake up to WonderWidgets!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/xml\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{myUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://httpbin.org/xml",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"xml"
					]
				}
			},
			"response": []
		},
		{
			"name": "JSON-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"slideshow\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Wake up to WonderWidgets!\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{myUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://httpbin.org/json",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"json"
					]
				}
			},
			"response": []
		},
		{
			"name": "TEXT-API",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify if 200 is the response code\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if OK is the response message\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if response body is present\", function () {\r",
							"    pm.response.to.have.body\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if mandatory strings are present\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"User-agent\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Disallow\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Content-Type response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", \"text/plain\");\r",
							"});\r",
							"\r",
							"pm.test(\"Verify if Server response header is present\", function () {\r",
							"    pm.response.to.have.header(\"Server\", \"gunicorn/19.9.0\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "{{myUserAgent}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://httpbin.org/robots.txt",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"robots.txt"
					]
				}
			},
			"response": []
		}
	]
}